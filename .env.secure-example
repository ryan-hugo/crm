# ====================
# CONFIGURAÇÃO DE EXEMPLO - SEGURA
# ====================

# IMPORTANTE: Este arquivo mostra COMO configurar variáveis de ambiente
# NUNCA commite valores reais de produção!

# ====================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ====================

# Desenvolvimento (valores de exemplo)
DATABASE_URL=postgres://devuser:devpass@localhost:5432/crm_dev_db?sslmode=disable

# Produção (use valores reais apenas em ambiente de produção)
# DATABASE_URL=postgres://produser:SECURE_PASSWORD@prod-db-host:5432/crm_prod_db?sslmode=require

# Pool de conexões
DB_MAX_CONNECTIONS=25
DB_MAX_IDLE_CONNECTIONS=10
DB_CONNECTION_TIMEOUT=30s

# ====================
# CONFIGURAÇÕES JWT
# ====================

# Desenvolvimento (chave de exemplo - NÃO usar em produção!)
JWT_SECRET=development-jwt-secret-key-change-in-production

# Produção (gere uma chave segura)
# JWT_SECRET=your-super-secure-256-bit-secret-key-here
# Exemplo de geração: openssl rand -base64 32

# Configurações de token
JWT_EXPIRATION_HOURS=24
JWT_REFRESH_EXPIRATION_DAYS=7

# ====================
# CONFIGURAÇÕES DO SERVIDOR
# ====================

# Porta do servidor
PORT=8080

# Ambiente (development, staging, production)
ENVIRONMENT=development

# Configurações de CORS
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# ====================
# CONFIGURAÇÕES DE LOGGING
# ====================

# Nível de log (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=DEBUG

# Formato de log (text, json)
LOG_FORMAT=text

# Saída de log (stdout, file, both)
LOG_OUTPUT=stdout

# Ativar modo debug
DEBUG=true

# Configurações de arquivo de log
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=100
LOG_MAX_BACKUPS=5
LOG_MAX_AGE=30
LOG_COMPRESS=true

# ====================
# CONFIGURAÇÕES DE EMAIL
# ====================

# Servidor SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Configurações de email
EMAIL_FROM=noreply@yourcompany.com
EMAIL_FROM_NAME=CRM Backend

# ====================
# CONFIGURAÇÕES DE REDIS (OPCIONAL)
# ====================

# Redis para cache/sessões
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ====================
# CONFIGURAÇÕES DE SEGURANÇA
# ====================

# Rate limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=1m

# Configurações de hash de senha
BCRYPT_COST=12

# Configurações de sessão
SESSION_SECRET=your-session-secret-key-here
SESSION_TIMEOUT=3600

# ====================
# CONFIGURAÇÕES DE UPLOAD
# ====================

# Tamanho máximo de arquivo (em bytes)
MAX_FILE_SIZE=10485760

# Tipos de arquivo permitidos
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf,doc,docx

# Diretório de upload
UPLOAD_DIR=./uploads

# ====================
# CONFIGURAÇÕES DE TERCEIROS
# ====================

# AWS (se usar S3 para uploads)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# Google Cloud (se usar GCP)
# GCP_PROJECT_ID=your-project-id
# GCP_SERVICE_ACCOUNT_KEY=path/to/service-account.json

# Azure (se usar Azure)
# AZURE_STORAGE_ACCOUNT=your-storage-account
# AZURE_STORAGE_ACCESS_KEY=your-access-key

# ====================
# CONFIGURAÇÕES DE MONITORAMENTO
# ====================

# Sentry (para error tracking)
# SENTRY_DSN=https://your-dsn@sentry.io/project-id

# New Relic (para APM)
# NEW_RELIC_LICENSE_KEY=your-license-key
# NEW_RELIC_APP_NAME=CRM Backend

# Prometheus (para métricas)
METRICS_ENABLED=true
METRICS_PORT=9090

# ====================
# CONFIGURAÇÕES DE DESENVOLVIMENTO
# ====================

# Ativar hot reload
HOT_RELOAD=true

# Ativar profiling
PROFILING_ENABLED=true

# Seed database on startup
SEED_DATABASE=true

# ====================
# CONFIGURAÇÕES DE TESTE
# ====================

# Banco de dados de teste
TEST_DATABASE_URL=postgres://testuser:testpass@localhost:5432/crm_test_db?sslmode=disable

# Desabilitar logs durante testes
TEST_LOG_LEVEL=ERROR

# ====================
# CONFIGURAÇÕES DE PRODUÇÃO
# ====================

# Use estas configurações apenas em produção
# DEBUG=false
# LOG_LEVEL=INFO
# LOG_FORMAT=json
# LOG_OUTPUT=both
# ENVIRONMENT=production
# CORS_ALLOWED_ORIGINS=https://your-frontend-domain.com
# RATE_LIMIT_REQUESTS=1000
# RATE_LIMIT_WINDOW=1h

# ====================
# NOTAS DE SEGURANÇA
# ====================

# 1. NUNCA commite este arquivo com valores reais
# 2. Use gerenciadores de secrets em produção (Vault, AWS Secrets Manager)
# 3. Rode secrets regularmente
# 4. Use conexões SSL/TLS em produção
# 5. Configure firewalls apropriados
# 6. Monitore logs por tentativas de acesso suspeitas
# 7. Implemente backup regular do banco de dados
# 8. Use autenticação multi-fator para acesso à infraestrutura
# 9. Mantenha dependências atualizadas
# 10. Realize auditorias de segurança regulares

# ====================
# GERAÇÃO DE VALORES SEGUROS
# ====================

# Para gerar JWT_SECRET seguro:
# openssl rand -base64 32

# Para gerar SESSION_SECRET seguro:
# openssl rand -hex 32

# Para gerar senha de banco segura:
# openssl rand -base64 24

# Para verificar força de senha:
# echo "sua-senha" | pwgen -s 32 1

# ====================
# COMANDOS ÚTEIS
# ====================

# Verificar conectividade do banco:
# psql $DATABASE_URL -c "SELECT 1"

# Testar conexão Redis:
# redis-cli -h $REDIS_HOST -p $REDIS_PORT ping

# Verificar configuração SMTP:
# telnet $SMTP_HOST $SMTP_PORT
